<?xml version="1.0"?>
<!-- THIS IS NECESSARY -->
<robot name="2wd_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:include filename="$(find 2wd_robot_description)/urdf/materials.xacro" /><!-- Include colors -->
    <xacro:include filename="$(find 2wd_robot_description)/urdf/2wd_robot.gazebo" /><!-- Include Gazebo Tags -->

    <!--//////////////////////////// Moment of Interia Functions ////////////////////////////////// -->
    <!-- function for calculating inertia of cylinder -->
    <macro name="cylinder_inertia" params="m r h">
        <inertia ixx="${m*(3*r*r+h*h)/12}" ixy="0" ixz="0" iyx="0" iyy="${m*(3*r*r+h*h)/12}" iyz="0" izx="0" izy="0" izz="${m*r*r/2}" />
    </macro>
    <!-- function for calculating inertia of cube -->
    <macro name="cube_inertia" params="w h d m">
        <inertia ixx="${m*(d*d+h*h)/12}" ixy="0" ixz="0" iyx="0" iyy="${m*(w*w+d*d)/12}" iyz="0" izx="0" izy="0" izz="${m*(w*w+h*h)/12}" />
    </macro>

    <!--////////////////////////////////// LINKS //////////////////////////////// -->

    <!-- Base -->
    <!-- Constants -->
    <property name="base_mass" value="5" /><!-- in kg-->
    <property name="base_depth" value="0.60" /><!-- in m-->
    <property name="base_height" value="0.5" /><!-- in m-->
    <property name="base_width" value="0.20" /><!-- in m-->
    <property name="ninety_degrees" value="1.5708" /><!-- in radians -->
    
    <!-- Actual body/chassis of the robot -->
    <link name="base_link">
        <!-- 1) Add Interia for Base -->
        <inertial>
            <mass value="${base_mass}" />
            <origin xyz="0 0 0" rpy="${ninety_degrees} 0 0" />
            <cube_inertia m="${base_mass}" d="${base_depth}" h="${base_height}" w="${base_width}" />
        </inertial>
        <!-- 2) Add Visual for Base -->
        <visual>
            <origin xyz="0 0 0" rpy="${ninety_degrees} 0 0" />
            <geometry>
                <!--length(depth) x width x height -->
                <box size="${base_depth} ${base_width} ${base_height}" />
            </geometry>
            <material name="blue" />
        </visual>
        <!-- 3) Add Collision for Base -->
        <collision>
            <origin xyz="0 0 0" rpy="${ninety_degrees} 0 0 " />
            <geometry>
                <!--length(depth) x width x height -->
                <box size="${base_depth} ${base_width} ${base_height} " />
            </geometry>
        </collision>
        <!-- 4) Caster Visual (optional) -->
        <visual name="caster">
          <origin xyz="-0.2 0 -0.125" rpy="0 0 0" />
          <geometry>
            <sphere radius="0.04" />
          </geometry>
        </visual>
        <!-- 5) Caster Collision (optional) -->
        <collision>
          <origin xyz="-0.2 0 -0.125" rpy="0 0 0" />
          <geometry>
            <sphere radius="0.04" />
          </geometry>
        </collision>
    </link>

    <!-- Constants for wheels -->
    <property name="wheel_mass" value="2.5" /><!-- in kg-->
    <property name="caster_mass" value="0.5" /><!-- in kg-->

    <property name="wheel_radius" value="0.2" /><!-- in m-->
    <property name="wheel_height" value="0.1" /><!-- in m-->
    

    <!-- Right Wheel -->
    <link name="right_wheel">
        <!-- 1) Add Interia for Front Right Wheel -->
        <inertial>
            <mass value="${wheel_mass}" />
            <origin xyz="0 0 0" />
            <cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_height}" />
        </inertial>
        <!-- 2) Add Visual for Right Wheel -->
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" /><!-- 90 because we want the wheel up not flat down -->
            <geometry>
                <mesh filename="package://2wd_robot_description/meshes/wheel.stl" scale="1 1 1"/>
            </geometry>
            <material name="grey" />
        </visual>
        <!-- 3) Add Collision for Front Right Wheel -->
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0 " />
            <geometry>
                <mesh filename="package://2wd_robot_description/meshes/wheel.stl" scale="1 1 1"/>
            </geometry>
        </collision>
    </link>

    <!-- Left Wheel -->
    <link name="left_wheel">
        <!-- 1) Add Interia for Front Left Wheel -->
        <inertial>
            <mass value="${wheel_mass}" />
            <origin xyz="0 0 0" />
            <cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_height}" />
        </inertial>
        <!-- 2) Add Visual for Front Left Wheel -->
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" /><!-- 90 because we want the wheel up not flat down -->
            <geometry>
                <mesh filename="package://2wd_robot_description/meshes/wheel.stl" scale="1 1 1"/>
            </geometry>
            <material name="grey" />
        </visual>
        <!-- 3) Add Collision for Front Left Wheel -->
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0 " />
            <geometry>
                <mesh filename="package://2wd_robot_description/meshes/wheel.stl" scale="1 1 1"/>
            </geometry>
        </collision>
    </link>

    <!--///////////////////////////// JOINTS ///////////////////////////////////////// -->
    <!-- Constants -->
    <property name="wheel_x_offset" value="0.25" /><!-- in m -->
    <property name="wheel_y_offset" value="0.31" /><!-- in m -->
    <property name="wheel_z_offset" value="0.00" /><!-- in m -->
    <property name="wheel_r_offset" value="0.00" /><!-- roll:  in m -->
    <property name="wheel_p_offset" value="0.00" /><!-- pitch: in m -->
    <property name="wheel_ya_offset" value="0.00" /><!-- yaw:   in m -->

    <!-- Right Wheel <-> Base -->
    <joint name="joint_f_r_wheel" type="continuous">
        <parent link="base_link" />
        <child link="right_wheel" />
        <origin xyz="${wheel_x_offset} ${-1*wheel_y_offset} ${wheel_z_offset}"
                rpy="${wheel_r_offset} ${wheel_p_offset} ${wheel_ya_offset}" />
        <!-- Axis of revoltuion. Right hand rule says Y will be rotating  -->
        <axis xyz="0 1 0" rpy="0 0 0" />
    </joint>

    <!-- Left wheel <-> Base -->
    <joint name="joint_f_l_wheel" type="continuous">
        <parent link="base_link" />
        <child link="left_wheel" />
        <origin xyz="${wheel_x_offset} ${1*wheel_y_offset} ${wheel_z_offset}"
                rpy="${wheel_r_offset} ${wheel_p_offset} ${wheel_ya_offset}" />
        <!-- Axis of revoltuion. Right hand rule says Y will be rotating  -->
        <axis xyz="0 1 0" rpy="0 0 0" />
    </joint>

<!--///////////////////////////// END OF ROBOT ///////////////////////////////////////// -->
</robot>
